openapi: 3.0.3
info:
  title: User Management Service
  description: API for managing users in the Task Display System.
  version: 1.0.0
servers:
  - url: /api/users
    description: Base URL for User Management APIs
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User successfully registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Error while registering user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /fetch/id/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found.
  /fetch/all:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of all users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /fetch/username/{username}:
    get:
      summary: Get a user by username
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found.
  /update/{id}:
    put:
      summary: Update a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /delete/{id}:
    delete:
      summary: Delete a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User successfully deleted.
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        userName:
          type: string
          description: Unique username for login.
        password:
          type: string
          description: Hashed password for authentication.
        emailId:
          type: string
          description: User's email address.
        firstName:
          type: string
          description: First name of the user.
        lastName:
          type: string
          description: Last name of the user.
        role:
          type: string
          description: Role of the user (e.g., USER, Manager).
        status:
          type: string
          description: Status of the user (ACTIVE, INACTIVE).
        departmentId:
          type: string
          description: ID of the department the user belongs to.
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message.
        statusCode:
          type: integer
          description: HTTP status code.
